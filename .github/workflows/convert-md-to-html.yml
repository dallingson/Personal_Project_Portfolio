name: Convert Project Markdown to HTML

on:
  push:
    branches:
      - main
    paths:
      - 'projects/*.md'
      - 'images/*'

jobs:
  convert-markdown:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Create Project Pages Directory
        run: mkdir -p project-pages

      - name: Convert Markdown to HTML
        run: |
          for file in projects/*.md; do
            filename=$(basename -- "$file" .md)
            output_file="project-pages/${filename}.html"

            # Extract metadata
            id=$(grep -oP '(?<=id: ).*' "$file" | head -1 || echo "$filename")
            title=$(grep -oP '(?<=title: ).*' "$file" | head -1 || echo "Unknown Project")
            description=$(grep -oP '(?<=description: ).*' "$file" | head -1 || echo "Project description")
            image=$(grep -oP '(?<=image: ).*' "$file" | head -1 || echo "default.jpg")
            url=$(grep -oP '(?<=url: ).*' "$file" | head -1 || echo "#")

            # Create HTML file
            cat > "$output_file" << EOF
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>$title - My Portfolio</title>
              <meta name="description" content="Detailed information about $title - web development project">
              <link rel="stylesheet" href="../styles.css">
          </head>
          <body>
              <header>
                  <h1>$title</h1>
              </header>

              <div class="container">
                  <a href="../index.html" class="back-link" aria-label="Back to main portfolio page">‚Üê Back to Portfolio</a>
                  
                  <div class="project-detail">
                      <img src="../$image" alt="Detailed screenshot of $title web application interface" style="width: 100%; max-width: 600px; height: 300px; object-fit: cover; border-radius: 10px; margin-bottom: 1rem;">
          EOF

            # Convert markdown content (skip frontmatter)
            sed '1,/^---$/d; /^---$/,$d' "$file" | pandoc -f markdown -t html >> "$output_file"

            cat >> "$output_file" << EOF
                      <p><strong>External Link:</strong> <a href="$url" target="_blank">View Project</a></p>
                  </div>
              </div>
              
              <footer>
                  <p>Connect with me on <a href="https://linkedin.com/in/your-profile" target="_blank">LinkedIn</a></p>
              </footer>
          </body>
          </html>
          EOF

          done

      - name: Update Projects JSON
        run: |
          echo "[" > projects.json
          first=true
          for file in projects/*.md; do
            filename=$(basename -- "$file" .md)
            
            id=$(grep -oP '(?<=id: ).*' "$file" | head -1 || echo "$filename")
            title=$(grep -oP '(?<=title: ).*' "$file" | head -1 || echo "Unknown Project")
            description=$(grep -oP '(?<=description: ).*' "$file" | head -1 || echo "Project description")
            image=$(grep -oP '(?<=image: ).*' "$file" | head -1 || echo "default.jpg")
            url=$(grep -oP '(?<=url: ).*' "$file" | head -1 || echo "#")
            details=$(sed '1,/^---$/d; /^---$/,$d' "$file" | tr '\n' ' ')

            if [ "$first" = false ]; then
              echo "," >> projects.json
            fi
            first=false

            cat >> projects.json << EOF
              {
                "id": "$id",
                "title": "$title",
                "description": "$description",
                "image": "$image",
                "url": "$url",
                "details": "$details"
              }
          EOF
          done
          echo "]" >> projects.json

      - name: Update Gallery in Index
        run: |
          # Remove old gallery content
          sed -i '/<section class="gallery"/,/<\/section>/{
            /<section class="gallery"/!{
              /<\/section>/!d
            }
          }' index.html

          # Generate new gallery tiles
          gallery_tiles=""
          for file in projects/*.md; do
            filename=$(basename -- "$file" .md)
            
            id=$(grep -oP '(?<=id: ).*' "$file" | head -1 || echo "$filename")
            title=$(grep -oP '(?<=title: ).*' "$file" | head -1 || echo "Unknown Project")
            description=$(grep -oP '(?<=description: ).*' "$file" | head -1 || echo "Project description")
            image=$(grep -oP '(?<=image: ).*' "$file" | head -1 || echo "default.jpg")

            gallery_tiles+="
                <a href=\"project-pages/${id}.html\" class=\"project-card\" aria-label=\"View ${title} details\">
                    <img src=\"${image}\" alt=\"Screenshot of ${title} web application\">
                    <div class=\"project-info\">
                        <h3>${title}</h3>
                        <p>${description}</p>
                    </div>
                </a>"
          done

          # Add new gallery section
          awk -v tiles="$gallery_tiles" '
            /<section class="gallery"/ {print; print tiles; next}
            {print}
          ' index.html > index.tmp && mv index.tmp index.html

      - name: Commit and Push Changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add project-pages/*.html projects.json index.html
          git commit -m "Updated project HTML files and gallery" || echo "No changes to commit"
          git push